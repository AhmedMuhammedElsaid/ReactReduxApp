{"version":3,"sources":["Components/App.js","Components/actionCreator.js","types.js","Components/rootReducer/index.js","index.js","reminder.png"],"names":["App","state","text","date","Date","renderReminder","reminders","props","className","map","reminder","key","id","moment","fromNow","onClick","delete_Reminder","src","logo","onChange","e","setState","target","value","this","type","placeholder","placeholderText","selected","showTimeSelect","timeFormat","timeCaption","dateFormat","add_Reminder","clear_Reminder","Component","connect","action","console","log","read_cookie","Math","random","bake_cookie","filter","store","createStore","ReactDom","render","document","getElementById","module","exports"],"mappings":"2RAQMA,E,2MACJC,MAAQ,CACNC,KAAM,GACNC,KAAM,IAAIC,M,EAEZC,eAAiB,WAAO,IACdC,EAAc,EAAKC,MAAnBD,UACR,OACE,wBAAIE,UAAU,cAEVF,EAAUG,KAAI,SAAAC,GACZ,OACE,wBAAIC,IAAKD,EAASE,GAAIJ,UAAU,mBAC9B,6BAAME,EAASR,MACf,6BAAMW,IAAO,IAAIT,KAAKM,EAASP,OAAOW,WACtC,4BAAQN,UAAU,2BAA2BO,QAAS,kBAAM,EAAKR,MAAMS,gBAAgBN,EAASE,MAAhG,W,wEAQJ,IAAD,OACP,OAEE,yBAAKJ,UAAU,OACb,yBAAKS,IAAKC,MACV,yBAAKV,UAAU,kBACb,6DAEF,2BACEW,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAAEnB,KAAMkB,EAAEE,OAAOC,SAChDA,MAAOC,KAAKvB,MAAMC,KAClBM,UAAU,eACViB,KAAK,OACLC,YAAY,uBAEd,kBAAC,IAAD,CACEH,MAAOC,KAAKvB,MAAME,KAClBK,UAAU,eACVmB,gBAAgB,eAChBC,SAAUJ,KAAKvB,MAAME,KACrBgB,SAAU,SAAAhB,GAAI,OAAI,EAAKkB,SAAS,CAAElB,KAAMA,KACxC0B,gBAAc,EACdC,WAAW,QACXC,YAAY,OACZC,WAAW,yBAEb,4BACExB,UAAU,4BACVO,QAAS,WACP,EAAKR,MAAM0B,aAAa,EAAKhC,MAAMC,KAAM,EAAKD,MAAME,MACpD,EAAKkB,SAAS,CAAEnB,KAAM,GAAIC,KAAM,OAJpC,kBASCqB,KAAKnB,iBACN,4BACEG,UAAU,0CACVO,QAAS,kBAAM,EAAKR,MAAM2B,mBAF5B,4B,GA3DUC,aA0EHC,eAAQ,SAAAnC,GACrB,MAAO,CACLK,UAAWL,KAEZ,CACDgC,aCrFwB,SAAC/B,EAAKC,GAC5B,IAAMkC,EAAS,CACXZ,KCHmB,gBDInBvB,OACAC,QAGJ,OADAmC,QAAQC,IAAI,MAAMF,GACXA,GD+ETrB,gBC7E2B,SAACJ,GAK1B,MAJe,CACXa,KCXsB,mBDYtBb,OD2ENsB,eCvE0B,WAIxB,MAHc,CACVT,KCjBqB,qBF+EdW,CASZpC,G,wBG9DYU,EA3BE,WAAyB,IAAxBT,EAAuB,uDAAf,GAAIoC,EAAW,uCACjC/B,EAAY,KAEhB,OADAL,EAAOuC,sBAAY,aDHI,kBCInBH,EAAOZ,MACPnB,EAAS,sBAAOL,GAAP,CAAc,CAAEC,KAAMmC,EAAOnC,KAAMC,KAAMkC,EAAOlC,KAAMS,GAAI6B,KAAKC,YACxEC,sBAAY,YAAYrC,GACxBgC,QAAQC,IAAI,eAAgBjC,GACP,KAAlBA,EAAUJ,MAGAI,GDVS,qBCYjB+B,EAAOZ,MAEZnB,EAAYL,EAAM2C,QAAO,SAAAlC,GAAQ,OAAIA,EAASE,KAAOyB,EAAOzB,MAC5D+B,sBAAY,YAAYrC,GACjBA,GDfc,oBCiBhB+B,EAAOZ,MACZnB,EAAY,GACZqC,sBAAY,YAAYrC,GACjBA,GAGAL,GCjBT4C,G,cAAQC,YAAYpC,IAC1BqC,IAASC,OACL,kBAAC,IAAD,CAAUH,MAAOA,GAAjB,IAAyB,kBAAC,EAAD,MAAzB,KACAI,SAASC,eAAe,U,mBCZ5BC,EAAOC,QAAU,IAA0B,sC","file":"static/js/main.9c77b4e6.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { add_Reminder, delete_Reminder, clear_Reminder } from './actionCreator'\nimport moment from 'moment'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport logo from './../reminder.png'\n\nclass App extends Component {\n  state = {\n    text: '',\n    date: new Date()\n  }\n  renderReminder = () => {\n    const { reminders } = this.props;\n    return (\n      <ul className=\"list-group\">\n        {\n          reminders.map(reminder => {\n            return (\n              <li key={reminder.id} className=\"list-group-item\">\n                <div>{reminder.text}</div>\n                <div>{moment(new Date(reminder.date)).fromNow()}</div>\n                <button className=\"closeIcon btn btn-danger\" onClick={() => this.props.delete_Reminder(reminder.id)} >X</button>\n              </li>\n            )\n          })\n        }\n      </ul>\n    )\n  }\n  render() {\n    return (\n\n      <div className=\"App\">\n        <img src={logo} />\n        <div className=\"reminder-title\">\n          <h2>Write Your Future Plans...! </h2>\n        </div>\n        <input\n          onChange={(e) => this.setState({ text: e.target.value })}\n          value={this.state.text}\n          className=\"form-control\"\n          type=\"text\"\n          placeholder=\"What's Your Plane \"\n        />\n        <DatePicker\n          value={this.state.date}\n          className=\"form-control\"\n          placeholderText=\"Enter A Date\"\n          selected={this.state.date}\n          onChange={date => this.setState({ date: date })}\n          showTimeSelect\n          timeFormat=\"HH:mm\"\n          timeCaption=\"time\"\n          dateFormat=\"MMMM d, yyyy h:mm aa\"\n        />\n        <button\n          className=\"btn btn-primary btn-block\"\n          onClick={() => {\n            this.props.add_Reminder(this.state.text, this.state.date)\n            this.setState({ text: \"\", date: \"\" })\n          }\n          }\n        >Add a new plan\n        </button>\n        {this.renderReminder()}\n        <button\n          className=\" clearReminder btn btn-danger btn-block\"\n          onClick={() => this.props.clear_Reminder()}\n        >Clear all the plans\n         </button>\n      </div>\n    )\n  }\n}\n// \n// function mapStateToProps (state){\n//   return{\n//     reminders:state\n//   }\n// }\nexport default connect(state => {\n  return {\n    reminders: state\n  }\n}, {\n  add_Reminder,\n  delete_Reminder,\n  clear_Reminder\n})\n  (App)\n","import {Add__Reminder,Delete__Reminder,Clear__Reminder} from '../types'\r\n\r\nexport const add_Reminder=(text,date)=>{\r\n    const action = {\r\n        type:Add__Reminder,\r\n        text,\r\n        date\r\n    }\r\n    console.log(\"Add\",action);\r\n    return action;\r\n}\r\nexport const delete_Reminder=(id)=>{\r\n    const action = {\r\n        type:Delete__Reminder,\r\n        id\r\n    }\r\n    return action \r\n}\r\nexport const clear_Reminder=()=>{\r\n    const action= {\r\n        type:Clear__Reminder\r\n    }\r\n    return action\r\n}","\r\nexport const Add__Reminder=\"Add__Reminder\"\r\nexport const Delete__Reminder=\"Delete__Reminder\"\r\nexport const Clear__Reminder=\"Clear__Reminder\"\r\n","import { Add__Reminder, Delete__Reminder, Clear__Reminder } from './../../types'\r\nimport { bake_cookie, read_cookie } from 'sfcookies'\r\nconst reminder = (state = [], action) => {\r\n    let reminders = null;\r\n    state =read_cookie(\"reminders\");\r\n    if (action.type === Add__Reminder) {\r\n        reminders = [...state, { text: action.text, date: action.date, id: Math.random() }];\r\n        bake_cookie(\"reminders\",reminders);\r\n        console.log(\"From Reducer\", reminders);\r\n        if(reminders.text ===\"\"){\r\n            return false\r\n        }\r\n       else { return reminders};\r\n    }\r\n    else if (action.type === Delete__Reminder) {\r\n\r\n        reminders = state.filter(reminder => reminder.id !== action.id);\r\n        bake_cookie(\"reminders\",reminders);\r\n        return reminders\r\n    }\r\n    else if (action.type === Clear__Reminder) {\r\n        reminders = [];\r\n        bake_cookie(\"reminders\",reminders);\r\n        return reminders\r\n    }\r\n    else {\r\n        return state;\r\n    }\r\n}\r\nexport default reminder \r\n","import React from 'react';\r\nimport ReactDom from 'react-dom'\r\nimport App from './Components/App'\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux'\r\nimport reminder from './Components/rootReducer/index'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport './index.css'\r\n\r\nconst store = createStore(reminder);\r\nReactDom.render(\r\n    <Provider store={store}> <App/> </Provider>,\r\n    document.getElementById('root')\r\n);","module.exports = __webpack_public_path__ + \"static/media/reminder.e2003fbe.png\";"],"sourceRoot":""}